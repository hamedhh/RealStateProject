@model DataLayer.ViewModels.CreatePropertyViewModel
@using DataLayer.DB
@{
    ViewBag.Title = "testCreate3";
    Layout = "~/Areas/UserPanel/Views/Shared/_PanelLayout.cshtml";
}
<link href="~/Areas/UserPanel/Content/CustomPanel.css" rel="stylesheet" />
@using (Html.BeginForm("testCreate3", "Property", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <div class="row">
        <div class="col-md-8">
            <div class="form-horizontal">

                <div class="form-group">
                    @Html.LabelFor(model => model.PropertyTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PropertyTypeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PropertyTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control", @id = "drpCountry" })
                        @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CityID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CityID", new SelectList(string.Empty), "انتخاب شهر", htmlAttributes: new { @class = "form-control", @id = "drpCity" })
                        @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.rigionID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("rigionID", new SelectList(string.Empty), "انتخاب محله", htmlAttributes: new { @class = "form-control", @id = "drpRigion" })
                        @Html.ValidationMessageFor(model => model.rigionID, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.usageID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("usageID", null, htmlAttributes: new { @class = "form-control", @id = "drpUsage" })
                        @Html.ValidationMessageFor(model => model.usageID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubUsageID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubUsageID", new SelectList(string.Empty), "انتخاب نوع واحد", htmlAttributes: new { @class = "form-control", @id = "drpSubUsage" })
                        @Html.ValidationMessageFor(model => model.SubUsageID, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group">
                    @Html.LabelFor(model => model.HomePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HomePrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HomePrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MortgagePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MortgagePrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MortgagePrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RentPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RentPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RentPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LocArea, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LocArea, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LocArea, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LocAge, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LocAge, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LocAge, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>


            </div>
        </div>


        <div class="col-md-4">
            @{
                List<Facility> _facility = ViewBag.Facilities;
                List<Condition> _conditions = ViewBag.Conditions;
            }
            <div class="form-horizontal">

                <div class="form-group">
                    <label class="control-label col-md-2">امکانات</label>
                    <div class="col-md-10">
                        <ul class="ks-cboxtags">
                            @foreach (var item in _facility)
                            {
                                <li><input name="checkFacility" type="checkbox" id="Checkfacility_@item.FacilityID" value="@item.FacilityID"><label class="checkBoxSub" for="Checkfacility_@item.FacilityID">@item.FacilityTitle</label></li>
                            }
                        </ul>
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-md-2">شرایط</label>
                    <div class="col-md-10">
                        <ul class="ks-cboxtags">
                            @foreach (var item in _conditions)
                            {
                                <li><input name="checkCondition" type="checkbox" id="Checkcondition_@item.ConditionID" value="@item.ConditionID"><label class="checkBoxSub" for="Checkcondition_@item.ConditionID">@item.ConditionTile</label></li>
                            }
                        </ul>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label com-md-2">تصویر</label>
                    <input  type="file" multiple="multiple" id="ImageUploader" name="ImageUploaders" />
                    <div class="col-md-4" id="Imgcollection">
                        <img class="thumbnail" style="margin:8px auto" id="img_1" />
                        <img class="thumbnail" style="margin:8px auto" id="img_2" />
                        <img class="thumbnail" style="margin:8px auto" id="img_3" />
                        <img class="thumbnail" style="margin:8px auto" id="img_4" />
                        <img class="thumbnail" style="margin:8px auto" id="img_5" />

                    </div>
                </div>

            </div>


        </div>
    </div>
}



<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#drpCity option').remove();
        $.getJSON('/UserPanel/Property/FindCity', { id: $('#drpCountry').val() }, function (data) {
            $.each(data, function () {
                $('#drpCity').append('<option value=' +
                    this.CityID + '>' + this.CityTitle + '</option>');
            });
        }).fail(function (jqXHR, textStatus, errorThrown) {
            alert('Error getting city!');
        });

        $('#drpSubUsage option').remove();
        $.getJSON('/UserPanel/Property/FindSubUsage', { id: $('#drpUsage').val() },
            function (data) {
                $.each(data, function () {
                    $('#drpSubUsage').append('<option value=' +
                        this.SubUsageID + '>' + this.SubUsageTitle + '</option>');
                });

            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Rigion!');
            });
        //if ($('#drpCity').val() != null) {
        //    $('#drpRigion option').remove();
        //    $.getJSON('/UserPanel/Property/FindRigion', { id: $('#drpCity').val() },
        //        function (data) {
        //            $.each(data, function () {
        //                $('#drpRigion').append('<option value=' +
        //                    this.RigionID + '>' + this.RegionTitle + '</option>');
        //            });
        //        }).fail(function (jqXHR, textStatus, errorThrown) {
        //            alert('Error getting Rigion!');
        //        });
        //}

    });



</script>

<script type="text/javascript">
    $('#drpCountry').change(function () {
        $('#drpCity option').remove();
        $.getJSON('/UserPanel/Property/FindCity', { id: $('#drpCountry').val() }, function (data) {
            $.each(data, function () {
                $('#drpCity').append('<option value=' +
                    this.CityID + '>' + this.CityTitle + '</option>');
            });
        }).fail(function (jqXHR, textStatus, errorThrown) {
            alert('Error getting city!');
        });
    });

</script>

<script type="text/javascript">
    $('#drpCity').change(function () {
        $('#drpRigion option').remove();
        $.getJSON('/UserPanel/Property/FindRigion', { id: $('#drpCity').val() },
            function (data) {
                $.each(data, function () {
                    $('#drpRigion').append('<option value=' +
                        this.RigionID + '>' + this.RegionTitle + '</option>');
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Rigion!');
            });

    });
</script>

<script>
    $('#drpUsage').change(function () {
        $('#drpSubUsage option').remove();
        $.getJSON('/UserPanel/Property/FindSubUsage', { id: $('#drpUsage').val() },
            function (data) {
                $.each(data, function () {
                    $('#drpSubUsage').append('<option value=' +
                        this.SubUsageID + '>' + this.SubUsageTitle + '</option>');
                });

            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Rigion!');
            });
    });
</script>

<script>
    $(document).ready(function () {
        var imagesArray = $("#Imgcollection").find("img").map(function () {
            return $(this).attr('id');
        }).get();
        for (i = 0; i < imagesArray.length; i++) {

            document.getElementById(imagesArray[i]).style.visibility = "hidden";
            
        }

    });
</script>

<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            var imagesArray = $("#Imgcollection").find("img").map(function () {
                return $(this).attr("src");
            }).get();
            if (imagesArray.length == 0) {
                reader.onload = function (e) {
                    $('#img_1').attr('src', e.target.result);
                    document.getElementById("img_1").style.visibility = "visible";
                }
            }
            else {
                var count = imagesArray.length + 1;
                reader.onload = function (e) {
                    $('#img_' + count.toString()).attr('src', e.target.result);
                    document.getElementById("img_" + count.toString()).style.visibility = "visible";

                }
            }
            //for (i = 0; i < imagesArray.length; i++) {

            //    var t = "<img src='" + imagesArray[i] + "'/>";
            //    alert(t);
            //}
            reader.readAsDataURL(input.files[0]);
        }
    }
    $("#ImageUploader").change(function () {
        readURL(this);
    });

</script>

@*<script>
    $(function () {
        $('#ImageUploader').fileupload({
            dataType: 'json',
            done: function (e, data) {
                $.each(data.result.files, function (index, file) {
                    $('<p/>').text(file.name).appendTo(document.body);
                });
            }
        });
    });
</script>*@
@*<script type="text/javascript">
        $(window).bind('load', function () {
            $('#drpRigion option').remove();
            $.getJSON('/UserPanel/Property/FindRigion', { id: $('#drpCity').val() },
                function (data) {
                    $.each(data, function () {
                        $('#drpRigion').append('<option value=' +
                            this.RigionID + '>' + this.RegionTitle + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error getting Rigion!');
                });
        });
    </script>*@


