@model DataLayer.ViewModels.CreatePropertyViewModel
@using DataLayer.DB
@{
    ViewBag.Title = "testCreate3";
    Layout = "~/Areas/UserPanel/Views/Shared/_PanelLayout.cshtml";
    bool? insertPerson = (bool?)Session["InsertProperty"];
}
<link href="~/Areas/UserPanel/Content/CustomPanel.css" rel="stylesheet" />
@using (Html.BeginForm("testCreate3", "Property", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div id="InsertPropertyModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                    <h4 class="modal-title" style="color: green;">توجه!</h4>
                </div>
                <div class="modal-body">
                    <p>ثبت آگهی با موفقیت انجام شد</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" style="color: tomato;">بستن</button>
                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="form-horizontal">

                <div class="form-group">
                    @Html.LabelFor(model => model.PropertyTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PropertyTypeID", null, htmlAttributes: new { @class = "form-control", @id = "drpPropertyType" })
                        @Html.ValidationMessageFor(model => model.PropertyTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control", @id = "drpCountry" })
                        @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CityID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CityID", new SelectList(string.Empty), "انتخاب شهر", htmlAttributes: new { @class = "form-control", @id = "drpCity" })
                        @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.rigionID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("rigionID", new SelectList(string.Empty), "انتخاب محله", htmlAttributes: new { @class = "form-control", @id = "drpRigion" })
                        @Html.ValidationMessageFor(model => model.rigionID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.usageID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("usageID", null, htmlAttributes: new { @class = "form-control", @id = "drpUsage" })
                        @Html.ValidationMessageFor(model => model.usageID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubUsageID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubUsageID", new SelectList(string.Empty), "انتخاب نوع واحد", htmlAttributes: new { @class = "form-control", @id = "drpSubUsage" })
                        @Html.ValidationMessageFor(model => model.SubUsageID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HomePrice, htmlAttributes: new { @class = "control-label col-md-2", @id = "lblPrice" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HomePrice, new { htmlAttributes = new { @class = "form-control", @id = "txtPrice" } })
                        @Html.ValidationMessageFor(model => model.HomePrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MortgagePrice, htmlAttributes: new { @class = "control-label col-md-2", @id = "lblMortgage" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MortgagePrice, new { htmlAttributes = new { @class = "form-control", @id = "txtMortgage" } })
                        @Html.ValidationMessageFor(model => model.MortgagePrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RentPrice, htmlAttributes: new { @class = "control-label col-md-2", @id = "lblRent" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RentPrice, new { htmlAttributes = new { @class = "form-control", @id = "txtRent" } })
                        @Html.ValidationMessageFor(model => model.RentPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LocArea, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LocArea, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LocArea, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LocAge, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LocAge, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LocAge, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            @{
                List<Facility> _facility = ViewBag.Facilities;
                List<Condition> _conditions = ViewBag.Conditions;
            }
            <div class="form-horizontal">

                <div class="form-group">
                    <label class="control-label col-md-2">امکانات</label>
                    <div class="col-md-10">
                        <ul class="ks-cboxtags">
                            @foreach (var item in _facility)
                            {
                                <li><input name="checkFacility" type="checkbox" id="Checkfacility_@item.FacilityID" value="@item.FacilityID"><label class="checkBoxSub" for="Checkfacility_@item.FacilityID">@item.FacilityTitle</label></li>
                            }
                        </ul>
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-md-2">شرایط</label>
                    <div class="col-md-10">
                        <ul class="ks-cboxtags">
                            @foreach (var item in _conditions)
                            {
                                <li><input name="checkCondition" type="checkbox" id="Checkcondition_@item.ConditionID" value="@item.ConditionID"><label class="checkBoxSub" for="Checkcondition_@item.ConditionID">@item.ConditionTile</label></li>
                            }
                        </ul>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label com-md-2">تصویر</label>
                    @Html.HiddenFor(i => i.FilesToBeUploaded)
                    <div id="divdelete" hidden>
                    </div>
                    <div id="uploaders">
                        <input type="file" id="fileToUpload" name="fileUpload" multiple="multiple" style="float: left;" />
                        <br />
                        <img src="~/Areas/UserPanel/Images/home-defualt.png" class="thumbnail" style="margin:8px auto;width: 250px;" id="imgPre" />
                        <span id="spnFile" style="float: left; color: #FF0000"></span>
                        @Html.ValidationMessage("File")
                        @Html.Hidden("hdnFileUpload")
                    </div>
                    <br />
                    <div class="col-lg-6">
                        <button class="btn btn-primary" id="btnAddIssue" type="submit">Submit</button>
                    </div>
                    <br />
                    <div class="control-section" style="padding: 0px;">
                        <div id="selectedFiles"></div>
                    </div>
                </div>

            </div>


        </div>
    </div>

    @*<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">Modal title</h4>
                    </div>
                    <div class="modal-body" id="myModalBody">

                    </div>
                </div>
            </div>
        </div>*@
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
@if (insertPerson == true)
{
    Session["InsertProperty"] = false;
    <script>
        $(function () {
            $("#InsertPropertyModal").modal("show");
        });
    </script>
}

@*<script>
        function submit() {
            $.alert({
                title: 'پیغام',
                content: 'اطلاعات ثبت شود؟',
                rtl: true,
                closeIcon: true,
                buttons: {
                    confirm: {
                        text: 'بله',
                        btnClass: 'btn btn-danger btn-xs',
                        action: function () {
                            $.get("/Admin/Product_Groups/Delete?id=" + id,
                                function () { $('#group_' + id).hide('slow') })

                            //$.alert('تایید شد.');
                        }
                    },
                    cancel: {
                        text: 'خیر',
                        btnClass: 'btn btn-primary btn-xs',
                        action: function () {
                            success()
                        }
                    }
                }
            });
        }

        function success() {
            $("#myModal").modal('hide');
        }

    </script>*@
<script>
    $(document).ready(function () {
        var valyeType = $('#drpPropertyType').val();
        if (valyeType != null) {
            if (valyeType == 1) {
                $('#txtPrice').show();
                $('#lblPrice').show();
                $('#txtMortgage').fadeOut("slow"); $('#txtMortgage').val(0);
                $('#lblMortgage').fadeOut("slow");
                $('#txtRent').fadeOut("slow"); $('#txtRent').val(0);
                $('#lblRent').fadeOut("slow");
            }
            if (valyeType == 2) {
                $('#txtPrice').fadeOut("slow"); $('#txtPrice').val(0);
                $('#lblPrice').fadeOut("slow");
                $('#txtMortgage').show();
                $('#lblMortgage').show();
                $('#txtRent').show();
                $('#lblRent').show();
            }
        }

    });
    $(document).ready(function () {
        $('#drpPropertyType').change(function () {
            var valyeType = $('#drpPropertyType').val();
            if (valyeType != null) {
                if (valyeType == 1) {
                    $('#txtPrice').show();
                    $('#lblPrice').show();
                    $('#txtMortgage').fadeOut("slow"); $('#txtMortgage').val(0);
                    $('#lblMortgage').fadeOut("slow");
                    $('#txtRent').fadeOut("slow"); $('#txtRent').val(0);
                    $('#lblRent').fadeOut("slow");
                }
                if (valyeType == 2) {
                    $('#txtPrice').fadeOut("slow"); $('#txtPrice').val(0);
                    $('#lblPrice').fadeOut("slow");
                    $('#txtMortgage').show();
                    $('#lblMortgage').show();
                    $('#txtRent').show();
                    $('#lblRent').show();
                }


            }
        });
    });
</script>



<script type="text/javascript">
    $(document).ready(function () {
        $('#drpCity option').remove();
        $.getJSON('/UserPanel/Property/FindCity', { id: $('#drpCountry').val() }, function (data) {
            $.each(data, function () {
                $('#drpCity').append('<option value=' +
                    this.CityID + '>' + this.CityTitle + '</option>');
            });
        }).fail(function (jqXHR, textStatus, errorThrown) {
            alert('Error getting city!');
        });

        $('#drpSubUsage option').remove();
        $.getJSON('/UserPanel/Property/FindSubUsage', { id: $('#drpUsage').val() },
            function (data) {
                $.each(data, function () {
                    $('#drpSubUsage').append('<option value=' +
                        this.SubUsageID + '>' + this.SubUsageTitle + '</option>');
                });

            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Rigion!');
            });
        //if ($('#drpCity').val() != null) {
        //    $('#drpRigion option').remove();
        //    $.getJSON('/UserPanel/Property/FindRigion', { id: $('#drpCity').val() },
        //        function (data) {
        //            $.each(data, function () {
        //                $('#drpRigion').append('<option value=' +
        //                    this.RigionID + '>' + this.RegionTitle + '</option>');
        //            });
        //        }).fail(function (jqXHR, textStatus, errorThrown) {
        //            alert('Error getting Rigion!');
        //        });
        //}

    });



</script>

<script type="text/javascript">
    $('#drpCountry').change(function () {
        $('#drpCity option').remove();
        $.getJSON('/UserPanel/Property/FindCity', { id: $('#drpCountry').val() }, function (data) {
            $.each(data, function () {
                $('#drpCity').append('<option value=' +
                    this.CityID + '>' + this.CityTitle + '</option>');
            });
        }).fail(function (jqXHR, textStatus, errorThrown) {
            alert('Error getting city!');
        });
    });

</script>

<script type="text/javascript">
    $('#drpCity').change(function () {
        $('#drpRigion option').remove();
        $.getJSON('/UserPanel/Property/FindRigion', { id: $('#drpCity').val() },
            function (data) {
                $.each(data, function () {
                    $('#drpRigion').append('<option value=' +
                        this.RigionID + '>' + this.RegionTitle + '</option>');
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Rigion!');
            });

    });
</script>

<script>
    $('#drpUsage').change(function () {
        $('#drpSubUsage option').remove();
        $.getJSON('/UserPanel/Property/FindSubUsage', { id: $('#drpUsage').val() },
            function (data) {
                $.each(data, function () {
                    $('#drpSubUsage').append('<option value=' +
                        this.SubUsageID + '>' + this.SubUsageTitle + '</option>');
                });

            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Rigion!');
            });
    });
</script>

<script>
    $(document).ready(function () {
        var imagesArray = $("#Imgcollection").find("img").map(function () {
            return $(this).attr('id');
        }).get();
        for (i = 0; i < imagesArray.length; i++) {

            document.getElementById(imagesArray[i]).style.visibility = "hidden";

        }

    });
</script>

@*<script>
        $(document).ready(function () {
            $('#drpCity').change(function () {
                loadRegion($(this).find(':selected').val())
            })
        })
    </script>
    <script>
        function loadRegion(cityid) {
            $("#drpRigion").children().remove()
            $.getJSON('/UserPanel/Property/FindRigion', { id: $('#drpCity').val() },
                function (data) {
                    $.each(data, function () {
                        $('#drpRigion').append('<option value=' +
                            this.RigionID + '>' + this.RegionTitle + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error getting Rigion!');
                });

            //$.ajax({
            //    type: "POST",
            //    url: "ajax/ajax.php",
            //    data: "get=state&countryId=" + cityid
            //}).done(function (result) {
            //    $(result).each(function () {
            //        $("#state").append($('<option>', {
            //            value: this.id,
            //            text: this.name,
            //        }));
            //    })
            //});
        }

    </script>*@

@*<script>

        function readURL(input) {
            //alert(input.files.length)


                if (input.files) {
                    var reader = new FileReader();

                    var imagesArray = $("#Imgcollection").find("img").map(function () {
                        return $(this).attr("src");
                    }).get();



                    reader.onload = function (e) {
                        for (var i = 0; i < input.files.length; i++)

                        var count = i + 1;
                        alert('#img_' + count.toString())
                            $('#img_' + count.toString()).attr('src', e.target.result);
                            document.getElementById("img_" + count.toString()).style.visibility = "visible";

                    }
                    reader.readAsDataURL(input.files[i]);
                }

        }
        $("#ImageUploader").change(function () {
            readURL(this);
        });

    </script>*@


    <script>
        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
        var files;
        var storedFiles = [];
        var upc = 0;

        $(function () {

            $(":file").attr('title', '  ');
            var $loading = $('#loadingDiv').hide();

            $("input[id^='fileToUpload']").change(function (e) {
                doReCreate(e);
            });

            selDiv = $("#selectedFiles");
        });

        function doReCreate(e) {

            upc = upc + 1;
            handleFileSelect(e);

            $("input[id^='fileToUpload']").hide();

            $('<input>').attr({
                type: 'file',
                multiple: 'multiple',
                id: 'fileToUpload' + upc,
                class: 'fUpload',
                name: 'fileUpload',
                style: 'float: left',
                title: '  ',
                onchange: "doReCreate(event)"

            }).appendTo('#uploaders');
        }

        function handleFileSelect(e) {

            //selDiv.innerHTML = ""; storedFiles = [];
            selDiv = document.querySelector("#selectedFiles");

            if (!e.target.files) return;

            //selDiv.innerHTML = "";
            files = e.target.files;

            for (var i = 0; i < files.length; i++) {
                //if (i == 0) { selDiv.innerHTML = ""; storedFiles = []; }
                var f = files[i];

                selDiv.innerHTML += "<div>" + f.name +
                    "<a onclick='removeAtt(this)' id='" + f.id +"'"+ "> X </a></div>";
                storedFiles.push(f.name);
            }
            $('#@Html.IdFor(i => i.FilesToBeUploaded)').val(storedFiles);
        }

            function removeAtt(t) {



                var serEle = $(t).parent().text().slice(0, -3);

            var index = storedFiles.indexOf(serEle);
            if (index !== -1) {
                storedFiles.splice(index, 1);
                }
                $('#divdelete').append(
                    $('<input>', {
                        type: 'text',
                        val: serEle,
                        name: "DeletedPhotp"
                    })
                );
            $(t).parent().remove();

            $('#@Html.IdFor(i => i.FilesToBeUploaded)').val(storedFiles);

        }
    </script>

    <script>
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgPre').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#fileToUpload").change(function () {
            readURL(this);
        });



    </script>
@*<script>
        $(function () {
            $('#ImageUploader').fileupload({
                dataType: 'json',
                done: function (e, data) {
                    $.each(data.result.files, function (index, file) {
                        $('<p/>').text(file.name).appendTo(document.body);
                    });
                }
            });
        });
    </script>*@
@*<script type="text/javascript">
            $(window).bind('load', function () {
                $('#drpRigion option').remove();
                $.getJSON('/UserPanel/Property/FindRigion', { id: $('#drpCity').val() },
                    function (data) {
                        $.each(data, function () {
                            $('#drpRigion').append('<option value=' +
                                this.RigionID + '>' + this.RegionTitle + '</option>');
                        });
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        alert('Error getting Rigion!');
                    });
            });
    </script>*@


